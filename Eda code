import pandas as pd
import numpy as np 
import matplotlib.pyplot as plt
import seaborn as sns

retail = pd.read_csv("SampleSuperstore.csv")

# checking dataset head
retail.head(5)

# checking dataset tail
retail.tail(5)

# checking for null values
retail.isnull().sum()

# summary of dataset
retail.info()

# shape of dataset
retail.shape

# columns of dataset
retail.columns

# visualization of various aspects of dataset
plt.figure(figsize=(16,8))
plt.bar('Sub-Category','Category', data=retail)
plt.show()
plt.figure(figsize=(16,4))
sns.countplot(x = retail['Sub-Category'])
plt.show()
plt.figure(figsize=(12,4))
sns.countplot(x=retail['State'])
plt.xticks(rotation=90)
plt.show()

# groupby according to various aspects
retail_grouped = pd.DataFrame(retail.groupby(['Ship Mode','Segment','Category','Sub-Category','State','Region'])['Quantity','Discount','Sales','Profit'].sum().reset_index())
retail_grouped

retail_grouped.groupby('State').Profit.agg(["sum","mean","min","max","count","median","std","var"])

x = retail.iloc[:, [9, 10, 11, 12]].values
from sklearn.cluster import KMeans
wcss = []

for i in range(1, 11):
    kmeans = KMeans(n_clusters = i, init = 'k-means++', 
                    max_iter = 300, n_init = 10, random_state = 0).fit(x)
    wcss.append(kmeans.inertia_)

sns.set_style("whitegrid") 
sns.FacetGrid(retail, hue ="Sub-Category",height = 6).map(plt.scatter,'Sales','Quantity')
plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:,1], 
            s = 100, c = 'yellow', label = 'Centroids')

plt.legend()

sns.pairplot(retail)

# Creating Boxplots for Sales , Discount , Quantity , Profit
fig, axes = plt.subplots(figsize = (20 , 10))
sns.boxplot(retail['Sales'])

fig, axes = plt.subplots(figsize = (20 , 10))
sns.boxplot(retail['Discount'])

fig, axes = plt.subplots(figsize = (20 , 10))
sns.boxplot(retail['Quantity'])

fig, axes = plt.subplots(figsize = (20 , 10))
sns.boxplot(retail['Profit'])

quartile_1 = retail.quantile(q = 0.25, axis = 0, numeric_only = True, interpolation = 'linear')
quartile_3 = retail.quantile(q = 0.75, axis = 0, numeric_only = True, interpolation = 'linear')
num = quartile_3 - quartile_1

# Number of values between Q3 and Q1  (interquartile range)
num

# Scatter plot
fig, ax = plt.subplots(figsize = (10 , 6))
ax.scatter(retail["Sales"] , retail["Profit"])
ax.set_xlabel('Sales')
ax.set_ylabel('Profit')
plt.show()

# Distribution Plot
plt.figure(figsize = (9 , 8))
sns.distplot(retail['Sales'], color = 'b', bins = 100, hist_kws = {'alpha': 0.4});
